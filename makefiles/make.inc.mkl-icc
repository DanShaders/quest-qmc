############################################################################
#
#  Program:         QUEST V1.4
#  Module:          make.inc
#  Purpose:         System dependent configuration
#  Modified date:   10/24/2012
#
############################################################################

#
#  Compiler and flags
#

# GNU Fortran compiler
# --------------------
#FC = gfortran
#FC_FLAGS   = -m64 -Ofast -Wall
#FC_FLAGS = -O3 -Wall
#NOOPT_FLAGS = -O0 -Wall


# Intel Fortran compiler
# ----------------------
FC = ifort
#FC_FLAGS    = -O3 -warn all -check all -traceback
FC_FLAGS = -m64 -fast -warn all -unroll -traceback -check pointers
NOOPT_FLAGS = -O0 -warn all


# MAGMA library path
# ------------------
#MAGMAPATH = ./magma-1.4.0
#MAGMALIB = -L$(MAGMAPATH)/lib -lmagma -lmagmablas -lmagma 
#MAGMAINC = -I$(MAGMAPATH)/include


# CUDA installation path
# ----------------------
#CUDAPATH = /usr/local/cuda
#CUDAPATH = /usr/lib/nvidia-cuda-toolkit/


# CUDA compiler and libraries
# ---------------------------
#NVCC = $(CUDAPATH)/bin/nvcc
#CU_FLAGS = -O3 -Xptxas -v -m 64 -arch sm_20 $(MAGMAINC)
#CUDALIB = -L$(CUDAPATH)/lib64 -lcublas -lcudart -lcuda
#CUDAINC = -I$(CUDAPATH)/include


# GNU C++ compiler
# ----------------
#CXX = g++
#CXX_FLAGS = -Wall -O3 # $(CUDAINC) $(MAGMAINC)



# Intel C++ compiler
# ------------------
CXX = icpc
#CXX_FLAGS = -O3 -openmp $(CUDAINC) $(MAGMAINC)
CXX_FLAGS = -m64 -O3 -Wall -unroll# $(CUDAINC) $(MAGMAINC)

# C++ libraries
# -------------
CXXLIB = -lstdc++ #-lrt

# Path to system's default BLAS and LAPACK libraries
# This should work on most Linux and MacOS X. If not,
# use the BLAS/LAPACK included in the QUEST package.
# --------------------------------------------------
#LAPACKLIB = -llapack -lblas


# Path to BLAS and LAPACK libraries shipped with QUEST
# Note: they are not optimized
# ----------------------------------------------------
#LAPACKLIB = $(QUEST_DIR)/liblapack.a $(QUEST_DIR)/libblas.a


# Path to Intel MKL library
# -------------------------
MKLPATH   = $(MKLROOT)/lib/intel64


#dynamic linking sequential
LAPACKLIB = -L$(MKLPATH) -mkl:sequential -lpthread

#static linking sequential
#LAPACKLIB = -L$(MKLPATH) -mkl:sequential -lpthread -static

#dynamic linking parallel
#LAPACKLIB = -L$(MKLPATH) -mkl:parallel -lpthread

# DQMC library
# ------------
DQMCLIB    = libdqmc.a


# Library linking
# ---------------
LIB        = $(CXXLIB) $(LAPACKLIB) # $(CUDALIB) $(MAGMALIB) 


# Archiver and flags
# ------------------
ARCH       = xiar
ARFLAG     = cr
RANLIB     = ranlib


# Program dependent flags
# -----------------------
#    -D_CKB    : use checkboard method for matrix B
#    -D_PREFIX : using prefix matrix multiplication
#    -D_OpenBC : use open boundary condition
#

PRG_FLAGS = -DDQMC_ASQRD  # -DDQMC_PROFILE -DDQMC_CUDA -D_CKBP -D_SXX -D_QMC_MPI

FLAGS = $(FC_FLAGS) $(PRG_FLAGS)
